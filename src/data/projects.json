[
  {
    "title": "Word - Mate",
    "description": "A full-stack game connecting people with a love for words. Built using Nodejs, Nextjs and socket.io.",
    "TechStack": ["Node,js"," Next.js", "Websockets", "Tailwind CSS"],
    "url": "https://wordmate-nu.vercel.app/",
    "tags": ["Full-Stack Web Development"]
  },
  {
    "title": "Traffic Signal Classifier",
    "description": "A Deep Learning model built using Tensorflow which can identify traffic signals.",
    "TechStack": ["Tensorflow", "Keras", "scikit learn", "numpy", "pandas", "matplotlib", "seaborn"],
    "url": "https://colab.research.google.com/drive/1NAmVJFPmKZo1iEr9bM8bsm_qOpcLNv15",
    "tags": ["Machine Learning", "Deep Learning"]
  },
  {
    "title": "Meet-up app",
    "description": "A basic application to add and view meetups with applications of React contexts",
    "TechStack": ["React", "Firebase"],
    "tags": ["Frontend Web Development"]
  },
  {
    "title": "Spam Classifier",
    "description": "A Deep learning model which classifies emails as spam or ham using Tensorflow to build the model, nltk for language processing and matplotlib and seaborn for data visualization",
    "TechStack": ["Tensorflow", "Keras", "scikit learn", "numpy", "pandas", "matplotlib", "seaborn"],
    "tags": ["Machine Learning", "Deep Learning"]
  },
  {
    "title": "Rotation period estimator",
    "description": "A coursework of the Computer Vision module in the Robotics and AI programme aimed at measuring the rotation period of an astronomical object using only vision techniques.",
    "TechStack": [""],
    "tags": ["Machine Learning", "Deep Learning"]
  },
  {
    "title": "Controlling ROBOTNIK for warehouse operations.",
    "description":"A combination of EKF and MPC was used for localization and motion control. Investigated the effect of adding more landmarks and taking range bearing measurements for the task. Tuned the prediction horizon and added the terminal weight matrix.",
    "url":" https://drive.google.com/file/d/1i4AA2GC4oQ6hYBFpBi_eNcEsQC-Zytw0/view?usp=sharing",
    "tags": ["Robotics"]
  },
  {
    "title": "ML model to control Panda manipulator",
    "description": "Part of a coursework at UCL dealing with comparison of neural networks and random forest algorithms to learn and repeat robot trajectories.",
    "url": "https://drive.google.com/file/d/1OCeOaw-d3JfKAxYrxyKhDg8zkNvhoD73/view?usp=sharing",
    "tags":["Machine Learning", "Robotics"]
  },
  {
    "title": "Pick and Place using a robot arm.",
    "description": "Given a certain number of blocks and baskets, the task was to identify their colour and place the blocks in the baskets of the same colour. PCL was used for object detection and moveIt library was used for picking and placing the block using the start and goal locations.",
    "tags":["Robotics"]

  },
  {
    "title": "Drone trajectory planning to visit target points and avoid obstacles",
    "description": "An Aerial Robotics (M.Sc) coursework to implement a path planning algorithm using the Travelling Salesman and A-star algorithms, to navigate all the waypoints, avoiding obstacles.",
    "tags": ["Robotics"]
  },
  {
    "title": "Book Recommender",
    "description": "A book recommender built using openai and HuggingFace APIs for vector-search, text classification and sentiment analysis.",
    "tags": ["Machine Learning", "GenAI"]
  },
  {
    "title": "AI Powered Expense Tracker",
    "description": "An expense tracker that accepts input via form data or a picture of the bill. Built using Python, Nodejs, and Nextjs. Used onnx and Tesseract APIs for image-to-text generation and fine-tuned huggingface api for info extraction.",
    "tags": ["Machine Learning", "GenAI"]
  },
  {
    "title": "LLM generated Behaviour Tree for robotic mission planning",
    "description": "A research work as part of my master's thesis. Tested the quality of Behaviour Trees generated by LLMs for a bridge inspection mission, benchmarking against a human-generated Behaviour Tree.",
    "tags": ["Machine Learning", "GenAI"]
  }
]
